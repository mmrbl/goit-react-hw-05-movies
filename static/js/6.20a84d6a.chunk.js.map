{"version":3,"file":"static/js/6.20a84d6a.chunk.js","mappings":"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","sources":["pages/Movies.styled.jsx","pages/Movies.jsx","../node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js","services/HTTPRequest.js"],"sourcesContent":["import styled from \"styled-components\";\n\nexport const Form = styled.form`\ndisplay: flex;\nalign-items: center;\n`\n\nexport const Input = styled.input`\nmargin: 20px;\nmargin-right: 0px;\nborder: none;\noutline: 2px solid black;\nborder-radius: 4px;\nheight: 30px;\nwidth: 500px;\nfont-weight: 600;\nfont-size: 24px;\n\n&:focus{\n  border: none;\n  outline: 2px solid orange;\n}\n`\n\nexport const Button = styled.button`\n  height: 35px; \n  border: 2px solid black;\n  border-radius: 6px;\n  font-weight: 600;\n  font-size: 24px;\n  margin-left: 15px;\n\n  &:hover{\n    cursor: pointer;\n    background-color: orange;\n  }\n`","\nimport { useEffect, useState } from \"react\";\nimport { RotatingSquare } from 'react-loader-spinner';\nimport { Link, useLocation, useSearchParams } from \"react-router-dom\";\nimport { fetchByQuery } from \"services/HTTPRequest\";\nimport { Button, Form, Input } from \"./Movies.styled\";\n\nconst Movies = () => {\n  const [prevQuery, setPrevQuery] = useState('');\n  const [data, setData] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const location = useLocation()\n  const [searchParams, setSearchParams] = useSearchParams()  \n  \n  let query = searchParams.get('movie') ?? ''\n\n\n  const fetchData = () => {\n\n    fetchByQuery(query)\n      .then(data => {\n        setData(data.results);\n      })\n      .catch(error => {\n        setError(error);\n      })\n      .finally(() => {\n        setIsLoading(false)\n        setPrevQuery(query)\n      });\n  \n};\n\n  useEffect(() => {\n    fetchData();\n// eslint-disable-next-line react-hooks/exhaustive-deps\n}, []);\n\nconst handleSubmit = (e) => {\n  e.preventDefault();\n\n      if (query === '') {\n      return alert('Input the movie name.')\n  }\n\n  if (prevQuery === query) {\n    return\n  }\n  \n  setIsLoading(true)\n\n  fetchData();\n};\n\n  const handleInputChange = (e) => {\n    const inputedValue = e.target.value\n    if (inputedValue !== '') {\n          setSearchParams({movie: inputedValue})\n    } else {\n      setSearchParams({})\n    }\n\n  }\n  \n  if (error) {\n    console.log(error)\n  }\n\n   return (\n    <div>\n      <Form action=\"\" onSubmit={handleSubmit}>\n         <Input placeholder=\"Input the movie name here.\" type=\"text\" name=\"film\" value={query} onChange={handleInputChange} />\n        <Button type=\"submit\">Search</Button>\n       </Form>\n       \n         \n       {isLoading ? <RotatingSquare color=\"orange\"/>: \n         <div>\n         <ul>\n           {data.map((movie) => {\n             const {id, name, title, original_title} = movie\n          return (\n            <li key={id}>\n              <Link to={`${id}`} state={{ from: location }}>{name || title || original_title}</Link>\n            </li>\n          )\n        })}\n           </ul>\n           </div>\n         }\n\n      \n    \n    </div>\n  )\n}\n\nexport default Movies\n","function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n  try {\n    var info = gen[key](arg);\n    var value = info.value;\n  } catch (error) {\n    reject(error);\n    return;\n  }\n\n  if (info.done) {\n    resolve(value);\n  } else {\n    Promise.resolve(value).then(_next, _throw);\n  }\n}\n\nexport default function _asyncToGenerator(fn) {\n  return function () {\n    var self = this,\n        args = arguments;\n    return new Promise(function (resolve, reject) {\n      var gen = fn.apply(self, args);\n\n      function _next(value) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n      }\n\n      function _throw(err) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n      }\n\n      _next(undefined);\n    });\n  };\n}","const options = {\n  method: 'GET',\n  headers: {\n    accept: 'application/json',\n    Authorization:\n      'Bearer eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiJjYzAyMjMxNGZlNmNmMjVlZmYyOTBkZDkxYjUxOTAzZiIsInN1YiI6IjY0NmZhMDQyYzVhZGE1MDBkZWU2Njc4MyIsInNjb3BlcyI6WyJhcGlfcmVhZCJdLCJ2ZXJzaW9uIjoxfQ.uIxfSgTwNgRYS5UWjwvghZ01EYEFs3x2JVSyeT6FUHE',\n  },\n};\n\nasync function fetchData(url) {\n  try {\n    const response = await fetch(url, options);\n    const data = await response.json();\n    return data;\n  } catch (err) {\n    throw new Error(err);\n  }\n}\n\nexport async function fetchTrending() {\n  const URL = 'https://api.themoviedb.org/3/trending/all/day?language=en-US';\n  return fetchData(URL);\n}\n\nexport async function fetchByQuery(query) {\n  const URL = `https://api.themoviedb.org/3/search/movie?query=${query}&include_adult=false&language=en-US&page=1`;\n  return fetchData(URL);\n}\n\nexport async function fetchByID(id) {\n  const URL = `https://api.themoviedb.org/3/movie/${id}?language=en-US`;\n  return fetchData(URL);\n}\n\nexport async function fetchReviews(id) {\n  const URL = `https://api.themoviedb.org/3/movie/${id}/reviews?language=en-US&page=1`;\n  return fetchData(URL);\n}\n\nexport async function fetchCasts(id) {\n  const URL = `https://api.themoviedb.org/3/movie/${id}/credits?language=en-US`;\n  return fetchData(URL);\n}\n"],"names":["Form","styled","Input","Button","useState","prevQuery","setPrevQuery","data","setData","isLoading","setIsLoading","error","setError","location","useLocation","useSearchParams","searchParams","setSearchParams","query","get","fetchData","fetchByQuery","then","results","catch","finally","useEffect","console","log","action","onSubmit","e","preventDefault","alert","placeholder","type","name","value","onChange","inputedValue","target","movie","color","map","id","title","original_title","to","state","from","asyncGeneratorStep","gen","resolve","reject","_next","_throw","key","arg","info","done","Promise","_asyncToGenerator","fn","self","this","args","arguments","apply","err","undefined","options","method","headers","accept","Authorization","url","fetch","response","json","Error","fetchTrending","URL","fetchByID","fetchReviews","fetchCasts"],"sourceRoot":""}